{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar RelayPropTypes = {\n  Container: function Container(props, propName, componentName) {\n    var component = props[propName];\n\n    if (component == null) {\n      return new Error(require('fbjs/lib/sprintf')('Required prop `%s` was not specified in `%s`.', propName, componentName));\n    } else if (!require('./isRelayContainer')(component)) {\n      return new Error(require('fbjs/lib/sprintf')('Invalid prop `%s` supplied to `%s`, expected a RelayContainer.', propName, componentName));\n    }\n\n    return null;\n  },\n  Environment: function Environment(props, propName, componentName) {\n    var context = props[propName];\n\n    if (!require('./isClassicRelayEnvironment')(context) || !require('./isRelayEnvironment')(context)) {\n      return new Error(require('fbjs/lib/sprintf')('Invalid prop/context `%s` supplied to `%s`, expected `%s` to be ' + 'an object conforming to the `RelayEnvironment` interface.', propName, componentName, context));\n    }\n\n    return null;\n  },\n  QueryConfig: require('prop-types').shape({\n    name: require('prop-types').string.isRequired,\n    params: require('prop-types').object.isRequired,\n    queries: require('prop-types').object.isRequired\n  }),\n  ClassicRelay: function ClassicRelay(props, propName, componentName) {\n    var relay = props[propName];\n\n    if (!require('./RelayContext').isRelayContext(relay) || !require('./isClassicRelayEnvironment')(relay.environment)) {\n      return new Error(require('fbjs/lib/sprintf')('Invalid prop/context `%s` supplied to `%s`, expected `%s` to be ' + 'an object with a classic `environment` implementation and `variables`.', propName, componentName, relay));\n    }\n\n    return null;\n  },\n  Relay: function Relay(props, propName, componentName) {\n    var relay = props[propName];\n\n    if (!require('./RelayContext').isRelayContext(relay)) {\n      return new Error(require('fbjs/lib/sprintf')('Invalid prop/context `%s` supplied to `%s`, expected `%s` to be ' + 'an object with an `environment` and `variables`.', propName, componentName, relay));\n    }\n\n    return null;\n  }\n};\nmodule.exports = RelayPropTypes;","map":null,"metadata":{},"sourceType":"script"}