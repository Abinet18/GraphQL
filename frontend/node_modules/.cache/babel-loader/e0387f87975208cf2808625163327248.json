{"ast":null,"code":"import _classCallCheck from \"/Users/abinetd/Desktop/Redux/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/abinetd/Desktop/Redux/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/abinetd/Desktop/Redux/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/abinetd/Desktop/Redux/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/abinetd/Desktop/Redux/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/abinetd/Desktop/Redux/GraphQL/frontend/src/components/AuthorContainer.js\";\nimport React, { Component } from 'react';\nimport { graphql, fetchQuery } from 'react-relay';\nimport environment from '../Environment';\nimport { connect } from 'react-redux';\nimport AuthorList from './AuthorList';\nimport * as actionTypes from '../store/actions';\n\nvar AuthorContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AuthorContainer, _Component);\n\n  function AuthorContainer() {\n    _classCallCheck(this, AuthorContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AuthorContainer).apply(this, arguments));\n  }\n\n  _createClass(AuthorContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.author.size == 0) {\n        actionTypes.fetchAuthors(this.props.onFetchAuthors);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Authors\"), this.props.authors.size > 0 ? React.createElement(AuthorList, {\n        authors: this.props.authors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }) : '');\n    }\n  }]);\n\n  return AuthorContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    authors: state.authors\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onFetchAuthors: function onFetchAuthors(authors) {\n      return dispatch({\n        type: actionTypes.FETCH_AUTHORS,\n        authors: authors\n      });\n    },\n    onAddAuthor: function onAddAuthor(author) {\n      return dispatch({\n        type: actionTypes.ADD_AUTHOR,\n        author: author\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorContainer);","map":{"version":3,"sources":["/Users/abinetd/Desktop/Redux/GraphQL/frontend/src/components/AuthorContainer.js"],"names":["React","Component","graphql","fetchQuery","environment","connect","AuthorList","actionTypes","AuthorContainer","props","author","size","fetchAuthors","onFetchAuthors","authors","mapStateToProps","state","mapDispatchToProps","dispatch","type","FETCH_AUTHORS","onAddAuthor","ADD_AUTHOR"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,EAAgBC,UAAhB,QAAiC,aAAjC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,UAAP,MAAwB,cAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;;IAGMC,e;;;;;;;;;;;;;wCAEJ;AACA,UAAG,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,IAAlB,IAAwB,CAA3B,EAA6B;AAC3BJ,QAAAA,WAAW,CAACK,YAAZ,CAAyB,KAAKH,KAAL,CAAWI,cAApC;AACD;AAEA;;;6BACO;AACR,aACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEC,KAAKJ,KAAL,CAAWK,OAAX,CAAmBH,IAAnB,GAAwB,CAAxB,GAA0B,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWK,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B,GAAqE,EAFtE,CADN;AAMG;;;;EAfyBb,S;;AAmB9B,IAAMc,eAAe,GAAE,SAAjBA,eAAiB,CAACC,KAAD,EAAU;AAC/B,SAAO;AACHF,IAAAA,OAAO,EAAEE,KAAK,CAACF;AADZ,GAAP;AAGD,CAJD;;AAMA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAa;AACtC,SAAO;AACLL,IAAAA,cAAc,EAAG,wBAAAC,OAAO;AAAA,aAAII,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAACZ,WAAW,CAACa,aAAlB;AAAgCN,QAAAA,OAAO,EAACA;AAAxC,OAAD,CAAZ;AAAA,KADnB;AAELO,IAAAA,WAAW,EAAG,qBAAAX,MAAM;AAAA,aAAGQ,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAACZ,WAAW,CAACe,UAAlB;AAA6BZ,QAAAA,MAAM,EAACA;AAApC,OAAD,CAAX;AAAA;AAFf,GAAP;AAID,CALD;;AAOA,eAAeL,OAAO,CAACU,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CT,eAA5C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {graphql,fetchQuery} from 'react-relay';\nimport environment from '../Environment';\nimport { connect } from 'react-redux';\n\nimport AuthorList  from './AuthorList';\nimport * as actionTypes from '../store/actions';\n\n\nclass AuthorContainer extends Component {\n  componentDidMount()\n  {\n  if(this.props.author.size==0){\n    actionTypes.fetchAuthors(this.props.onFetchAuthors);\n  }\n\n  }\n  render(){\n  return (\n        <div>\n          <p className=\"heading\">Authors</p>\n        {this.props.authors.size>0?<AuthorList authors={this.props.authors}/>:''}\n        </div>\n      )\n    }\n\n}\n\nconst mapStateToProps= (state)=> {\n  return {\n      authors: state.authors\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=> {\n  return {\n    onFetchAuthors : authors => dispatch({type:actionTypes.FETCH_AUTHORS,authors:authors}),\n    onAddAuthor : author=> dispatch({type:actionTypes.ADD_AUTHOR,author:author})\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(AuthorContainer);\n"]},"metadata":{},"sourceType":"module"}