{"ast":null,"code":"import _classCallCheck from \"/Users/abinetd/Desktop/Redux/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/abinetd/Desktop/Redux/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/abinetd/Desktop/Redux/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/abinetd/Desktop/Redux/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/abinetd/Desktop/Redux/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/abinetd/Desktop/Redux/GraphQL/frontend/src/components/books.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { QueryRenderer, graphql } from 'react-relay';\nimport environment from '../Environment';\nimport BookList from './BookList';\n\nvar allBooksQuery = function allBooksQuery() {\n  var node = require(\"./__generated__/booksQuery.graphql\");\n\n  if (node.hash && node.hash !== \"87b10ca7a02604a3fc1cc254fe1cbb41\") {\n    console.error(\"The definition of 'booksQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n  }\n\n  return require(\"./__generated__/booksQuery.graphql\");\n};\n\nvar books =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(books, _Component);\n\n  function books() {\n    _classCallCheck(this, books);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(books).apply(this, arguments));\n  }\n\n  _createClass(books, [{\n    key: \"render\",\n    value: function render() {\n      // const books=[{title:\"First title\",description:\"This book is on bla bla\",\n      // author:{name:\"Auhtor name\"},comments:[{user:{fullname:\"Abinet Tafa\"},\n      // comment:\"Great book\",commentdate:\"Oct 24 2018\"}]}];\n      return React.createElement(QueryRenderer, {\n        environment: environment,\n        query: allBooksQuery,\n        variables: {\n          count: 3\n        },\n        render: function render(_ref) {\n          var error = _ref.error,\n              props = _ref.props;\n\n          if (error) {\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 28\n              },\n              __self: this\n            }, error.message);\n          } else if (props) {\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 33\n              },\n              __self: this\n            }, React.createElement(\"p\", {\n              className: \"heading\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34\n              },\n              __self: this\n            }, \"Books\"), React.createElement(BookList, {\n              viewer: props.viewer,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35\n              },\n              __self: this\n            }));\n          }\n\n          return null;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return books;\n}(Component);\n\nexport default books;","map":{"version":3,"sources":["/Users/abinetd/Desktop/Redux/GraphQL/frontend/src/components/books.js"],"names":["React","Component","QueryRenderer","graphql","environment","BookList","allBooksQuery","books","count","error","props","message","viewer"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,YAAP;AACA,SAAQC,aAAR,EAAsBC,OAAtB,QAAoC,aAApC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,IAAMC,aAAa,YAAbA,aAAa;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,CAAnB;;IAQMC,K;;;;;;;;;;;;;6BACI;AACN;AACA;AACA;AACA,aACA,oBAAC,aAAD;AACE,QAAA,WAAW,EAAEH,WADf;AAEE,QAAA,KAAK,EAAEE,aAFT;AAGI,QAAA,SAAS,EAAE;AAACE,UAAAA,KAAK,EAAC;AAAP,SAHf;AAIE,QAAA,MAAM,EAAE,sBAAiB;AAAA,cAAfC,KAAe,QAAfA,KAAe;AAAA,cAATC,KAAS,QAATA,KAAS;;AACvB,cAAGD,KAAH,EACA;AACE,mBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAMA,KAAK,CAACE,OAAZ,CAAP;AACD,WAHD,MAIK,IAAGD,KAAH,EACL;AACE,mBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE;AAAG,cAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,QAAD;AAAU,cAAA,MAAM,EAAEA,KAAK,CAACE,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF;AAKD;;AACD,iBAAO,IAAP;AACD,SAlBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAsBD;;;;EA3BiBX,S;;AA6BpB,eAAeM,KAAf","sourcesContent":["import React, {Component} from 'react';\nimport '../App.css';\nimport {QueryRenderer,graphql} from 'react-relay';\nimport environment from '../Environment';\nimport BookList from './BookList';\n\nconst allBooksQuery = graphql`\nquery booksQuery($count:Int!,$after:String)\n{\nviewer{\n  ...BookList_viewer\n}\n}\n`\nclass books extends Component {\n  render(){\n    // const books=[{title:\"First title\",description:\"This book is on bla bla\",\n    // author:{name:\"Auhtor name\"},comments:[{user:{fullname:\"Abinet Tafa\"},\n    // comment:\"Great book\",commentdate:\"Oct 24 2018\"}]}];\n    return(\n    <QueryRenderer\n      environment={environment}\n      query={allBooksQuery}\n        variables={{count:3}}\n      render={({error,props})=>{\n        if(error)\n        {\n          return <div>{error.message}</div>\n        }\n        else if(props)\n        {\n          return(\n            <div>\n              <p className=\"heading\">Books</p>\n              <BookList viewer={props.viewer}/>\n            </div>)\n        }\n        return null;\n      }}\n    />)\n\n  }\n}\nexport default books;\n"]},"metadata":{},"sourceType":"module"}