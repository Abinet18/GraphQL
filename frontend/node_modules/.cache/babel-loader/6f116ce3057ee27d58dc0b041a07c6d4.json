{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict'; // As early as possible, check for the existence of the JavaScript globals which\n// Relay Runtime relies upon, and produce a clear message if they do not exist.\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof Map !== 'function' || typeof Set !== 'function' || typeof Promise !== 'function' || typeof Object.assign !== 'function') {\n    throw new Error('relay-runtime requires Map, Set, Promise, and Object.assign to exist. ' + 'Use a polyfill to provide these for older browsers.');\n  }\n}\n/**\n * The public interface to Relay Runtime.\n */\n\n\nmodule.exports = {\n  // Core API\n  Environment: require('./RelayModernEnvironment'),\n  Network: require('./RelayNetwork'),\n  Observable: require('./RelayObservable'),\n  QueryResponseCache: require('./RelayQueryResponseCache'),\n  RecordSource: require('./RelayInMemoryRecordSource'),\n  Store: require('./RelayMarkSweepStore'),\n  areEqualSelectors: require('./RelayCore').areEqualSelectors,\n  createFragmentSpecResolver: require('./RelayCore').createFragmentSpecResolver,\n  createOperationSelector: require('./RelayCore').createOperationSelector,\n  getDataIDsFromObject: require('./RelayCore').getDataIDsFromObject,\n  getFragment: require('./RelayModernGraphQLTag').getFragment,\n  getRequest: require('./RelayModernGraphQLTag').getRequest,\n  // TODO (T23201154) remove in a future Relay release.\n  getOperation: function getOperation() {\n    if (process.env.NODE_ENV !== 'production') {\n      require('fbjs/lib/warning')(false, 'getOperation() deprecated. Use getRequest().');\n    }\n\n    return require('./RelayModernGraphQLTag').getRequest.apply(null, arguments);\n  },\n  getSelector: require('./RelayCore').getSelector,\n  getSelectorList: require('./RelayCore').getSelectorList,\n  getSelectorsFromObject: require('./RelayCore').getSelectorsFromObject,\n  getStorageKey: require('./RelayStoreUtils').getStorageKey,\n  getVariablesFromObject: require('./RelayCore').getVariablesFromObject,\n  graphql: require('./RelayModernGraphQLTag').graphql,\n  // Declarative mutation API\n  MutationTypes: require('./RelayDeclarativeMutationConfig').MutationTypes,\n  RangeOperations: require('./RelayDeclarativeMutationConfig').RangeOperations,\n  // Extensions\n  ConnectionHandler: require('./RelayConnectionHandler'),\n  ViewerHandler: require('./RelayViewerHandler'),\n  // Helpers (can be implemented via the above API)\n  applyOptimisticMutation: require('./applyRelayModernOptimisticMutation'),\n  commitLocalUpdate: require('./commitLocalUpdate'),\n  commitMutation: require('./commitRelayModernMutation'),\n  fetchQuery: require('./fetchRelayModernQuery'),\n  isRelayModernEnvironment: require('./isRelayModernEnvironment'),\n  requestSubscription: require('./requestRelaySubscription'),\n  // Configuration interface for legacy or special uses\n  ConnectionInterface: require('./RelayConnectionInterface'),\n  // Utilities\n  RelayProfiler: require('./RelayProfiler'),\n  // INTERNAL-ONLY: These exports might be removed at any point.\n  RelayConcreteNode: require('./RelayConcreteNode'),\n  RelayError: require('./RelayError'),\n  RelayNetworkLoggerTransaction: require('./RelayNetworkLoggerTransaction'),\n  DEFAULT_HANDLE_KEY: require('./RelayDefaultHandleKey').DEFAULT_HANDLE_KEY,\n  ROOT_ID: require('./RelayStoreUtils').ROOT_ID,\n  createRelayNetworkLogger: require('./createRelayNetworkLogger'),\n  deepFreeze: require('./deepFreeze'),\n  generateClientID: require('./generateRelayClientID'),\n  getRelayHandleKey: require('./getRelayHandleKey'),\n  isScalarAndEqual: require('./isScalarAndEqual'),\n  recycleNodesInto: require('./recycleNodesInto'),\n  simpleClone: require('./simpleClone'),\n  stableCopy: require('./stableCopy')\n};","map":null,"metadata":{},"sourceType":"script"}