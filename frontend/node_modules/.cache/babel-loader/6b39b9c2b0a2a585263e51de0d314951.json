{"ast":null,"code":"var _this = this;\n\nimport { commitMutation, graphql } from 'react-relay';\nimport { ConnectionHandler } from \"relay-runtime\";\nimport environment from '../Environment';\nvar tempID = 0;\n\nvar mutation = function mutation() {\n  var node = require(\"./__generated__/AddBookMutation.graphql\");\n\n  if (node.hash && node.hash !== \"4efc926b73e12ec602df28326840f881\") {\n    console.error(\"The definition of 'AddBookMutation' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n  }\n\n  return require(\"./__generated__/AddBookMutation.graphql\");\n};\n\nexport default (function (title, authorid, description, onAddBook) {\n  var variables = {\n    input: {\n      book: {\n        title: title,\n        description: description,\n        authorid: authorid\n      }\n    },\n    clientMutationId: \"\"\n  };\n  var optimisticResponse = {\n    addBook: {\n      book: {\n        id: null,\n        title: title,\n        description: description,\n        author: {\n          name: \"\"\n        },\n        comments: []\n      }\n    }\n  };\n\n  var updater = function updater(proxyStore) {\n    var addBookField = proxyStore.getRootField('addBook');\n    console.log(addBookField);\n    var newBook = addBookField.getLinkedRecord('book');\n    if (!newBook) return;\n\n    _this.props.onAddBook(newBook);\n  };\n\n  commitMutation(environment, {\n    mutation: mutation,\n    variables: variables,\n    //optimisticUpdater: updater,\n    //updater: updater,\n    onCompleted: function onCompleted(response, errors) {\n      _this.props.onAddBook(response.addBook.book);\n    },\n    onError: function onError(err) {\n      return console.error(err);\n    },\n    optimisticResponse: optimisticResponse\n  });\n});","map":{"version":3,"sources":["/Users/abinetd/Desktop/Redux/GraphQL/frontend/src/mutations/AddBookMutation.js"],"names":["commitMutation","graphql","ConnectionHandler","environment","tempID","mutation","title","authorid","description","onAddBook","variables","input","book","clientMutationId","optimisticResponse","addBook","id","author","name","comments","updater","proxyStore","addBookField","getRootField","console","log","newBook","getLinkedRecord","props","onCompleted","response","errors","onError","err","error"],"mappings":";;AAAA,SAAQA,cAAR,EAAwBC,OAAxB,QAAsC,aAAtC;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,IAAIC,MAAM,GAAC,CAAX;;AACA,IAAMC,QAAQ,YAARA,QAAQ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,CAAd;;AAuBA,gBAAe,UAACC,KAAD,EAAOC,QAAP,EAAgBC,WAAhB,EAA4BC,SAA5B,EAAyC;AACtD,MAAMC,SAAS,GAAG;AAChBC,IAAAA,KAAK,EAAC;AAACC,MAAAA,IAAI,EAAE;AACXN,QAAAA,KAAK,EAALA,KADW;AAEXE,QAAAA,WAAW,EAAXA,WAFW;AAGXD,QAAAA,QAAQ,EAARA;AAHW;AAAP,KADU;AAMhBM,IAAAA,gBAAgB,EAAC;AAND,GAAlB;AASA,MAAMC,kBAAkB,GAAG;AACvBC,IAAAA,OAAO,EAAE;AACPH,MAAAA,IAAI,EAAE;AACJI,QAAAA,EAAE,EAAE,IADA;AAEJV,QAAAA,KAAK,EAAEA,KAFH;AAGJE,QAAAA,WAAW,EAAEA,WAHT;AAIJS,QAAAA,MAAM,EAAC;AACLC,UAAAA,IAAI,EAAC;AADA,SAJH;AAOJC,QAAAA,QAAQ,EAAC;AAPL;AADC;AADc,GAA3B;;AAcA,MAAMC,OAAO,GAAI,SAAXA,OAAW,CAACC,UAAD,EAAgB;AAE/B,QAAMC,YAAY,GAAED,UAAU,CAACE,YAAX,CAAwB,SAAxB,CAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACA,QAAMI,OAAO,GAAEJ,YAAY,CAACK,eAAb,CAA6B,MAA7B,CAAf;AACA,QAAG,CAACD,OAAJ,EAAa;;AACb,IAAA,KAAI,CAACE,KAAL,CAAWnB,SAAX,CAAqBiB,OAArB;AACD,GAPD;;AASA1B,EAAAA,cAAc,CACZG,WADY,EAEZ;AACEE,IAAAA,QAAQ,EAARA,QADF;AAEEK,IAAAA,SAAS,EAATA,SAFF;AAGE;AACA;AACAmB,IAAAA,WAAW,EAAE,qBAACC,QAAD,EAAWC,MAAX,EAAsB;AACjC,MAAA,KAAI,CAACH,KAAL,CAAWnB,SAAX,CAAqBqB,QAAQ,CAACf,OAAT,CAAiBH,IAAtC;AACD,KAPH;AAQEoB,IAAAA,OAAO,EAAE,iBAAAC,GAAG;AAAA,aAAIT,OAAO,CAACU,KAAR,CAAcD,GAAd,CAAJ;AAAA,KARd;AASEnB,IAAAA,kBAAkB,EAAlBA;AATF,GAFY,CAAd;AAcD,CA/CD","sourcesContent":["import {commitMutation, graphql} from 'react-relay';\nimport { ConnectionHandler } from \"relay-runtime\";\nimport environment from '../Environment';\n\nlet tempID=0;\nconst mutation = graphql`\n  mutation AddBookMutation(\n    $input: AddBookInput!\n  ) {\n    addBook(input:$input) {\n      book{\n        id\n        title\n        description\n        author{name}\n        comments{\n          user{\n            id\n            fullname\n          }\n          comment\n          commentdate\n        }\n    }\n  }\n}\n`;\n\nexport default (title,authorid,description,onAddBook)=> {\n  const variables = {\n    input:{book: {\n      title,\n      description,\n      authorid,\n    }},\n    clientMutationId:\"\"\n  };\n\n  const optimisticResponse = {\n      addBook: {\n        book: {\n          id: null,\n          title: title,\n          description: description,\n          author:{\n            name:\"\"\n          },\n          comments:[]\n        },\n    }\n  };\n\n  const updater =  (proxyStore) => {\n\n    const addBookField= proxyStore.getRootField('addBook');\n    console.log(addBookField);\n    const newBook= addBookField.getLinkedRecord('book');\n    if(!newBook) return;\n    this.props.onAddBook(newBook);\n  };\n\n  commitMutation(\n    environment,\n    {\n      mutation,\n      variables,\n      //optimisticUpdater: updater,\n      //updater: updater,\n      onCompleted: (response, errors) => {\n        this.props.onAddBook(response.addBook.book);\n      },\n      onError: err => console.error(err),\n      optimisticResponse\n    },\n  );\n}\n"]},"metadata":{},"sourceType":"module"}