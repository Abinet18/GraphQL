{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict-local\n * @format\n */\n'use strict';\n/**\n * Creates an implementation of the `Network` interface defined in\n * `RelayNetworkTypes` given `fetch` and `subscribe` functions.\n */\n\nfunction create(fetchFn, subscribeFn) {\n  // Convert to functions that returns RelayObservable.\n  var observeFetch = require('./ConvertToExecuteFunction').convertFetch(fetchFn);\n\n  var observeSubscribe = subscribeFn ? require('./ConvertToExecuteFunction').convertSubscribe(subscribeFn) : undefined;\n\n  function execute(request, variables, cacheConfig, uploadables) {\n    if (request.operationKind === 'subscription') {\n      !observeSubscribe ? process.env.NODE_ENV !== 'production' ? require('fbjs/lib/invariant')(false, 'RelayNetwork: This network layer does not support Subscriptions. ' + 'To use Subscriptions, provide a custom network layer.') : require('fbjs/lib/invariant')(false) : void 0;\n      !!uploadables ? process.env.NODE_ENV !== 'production' ? require('fbjs/lib/invariant')(false, 'RelayNetwork: Cannot provide uploadables while subscribing.') : require('fbjs/lib/invariant')(false) : void 0;\n      return observeSubscribe(request, variables, cacheConfig);\n    }\n\n    var pollInterval = cacheConfig.poll;\n\n    if (pollInterval != null) {\n      !!uploadables ? process.env.NODE_ENV !== 'production' ? require('fbjs/lib/invariant')(false, 'RelayNetwork: Cannot provide uploadables while polling.') : require('fbjs/lib/invariant')(false) : void 0;\n      return observeFetch(request, variables, {\n        force: true\n      }).poll(pollInterval);\n    }\n\n    return observeFetch(request, variables, cacheConfig, uploadables);\n  }\n\n  return {\n    execute: execute\n  };\n}\n\nmodule.exports = {\n  create: create\n};","map":null,"metadata":{},"sourceType":"script"}