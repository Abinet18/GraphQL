{"ast":null,"code":"var _graphql;\n\nexport var ADD_BOOK = 'ADD_BOOK';\nexport var ADD_COMMENT = 'ADD_COMMENT';\nexport var ADD_AUTHOR = 'ADD_AUTHOR';\nexport var SIGNUP_USER = 'SIGNUP_USER';\nexport var LOGIN_USER = 'LOGIN_USER';\nexport var UPDATE_BOOK = 'UPDATE_BOOK';\nexport var DELETE_BOOK = 'DELETE_BOOK';\nexport var DELETE_AUTHOR = 'DELETE_AUTHOR';\nexport var FETCH_BOOKS = 'FETCH_BOOKS';\nexport var FETCH_AUTHORS = 'FETCH_AUTHORS';\nexport var fetchAuthors = function fetchAuthors(onFetchAuthors) {\n  var allAuthorsQuery = _graphql || (_graphql = function _graphql() {\n    var node = require(\"./__generated__/AuthorContainerQuery.graphql\");\n\n    if (node.hash && node.hash !== \"dac5775a9aa32657853d305adba40a7d\") {\n      console.error(\"The definition of 'AuthorContainerQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"./__generated__/AuthorContainerQuery.graphql\");\n  });\n\n  fetchQuery(environment, allAuthorsQuery).then(function (data) {\n    console.log(data);\n    var authors = new Map();\n    data.authorviewer.allAuthors.edges.map(function (_ref) {\n      var node = _ref.node;\n      authors.set(node.id, node);\n    });\n    onFetchAuthors(authors);\n  });\n};","map":{"version":3,"sources":["/Users/abinetd/Desktop/Redux/GraphQL/frontend/src/store/actions.js"],"names":["ADD_BOOK","ADD_COMMENT","ADD_AUTHOR","SIGNUP_USER","LOGIN_USER","UPDATE_BOOK","DELETE_BOOK","DELETE_AUTHOR","FETCH_BOOKS","FETCH_AUTHORS","fetchAuthors","onFetchAuthors","allAuthorsQuery","fetchQuery","environment","then","data","console","log","authors","Map","authorviewer","allAuthors","edges","map","node","set","id"],"mappings":";;AAAA,OAAO,IAAMA,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,WAAW,GAAC,aAAlB;AACP,OAAO,IAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,IAAMC,WAAW,GAAC,aAAlB;AACP,OAAO,IAAMC,WAAW,GAAC,aAAlB;AACP,OAAO,IAAMC,aAAa,GAAC,eAApB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,aAAa,GAAG,eAAtB;AAGP,OAAO,IAAMC,YAAY,GAAE,SAAdA,YAAc,CAACC,cAAD,EAAkB;AAE3C,MAAMC,eAAe;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,IAArB;;AAyBAC,EAAAA,UAAU,CAACC,WAAD,EAAaF,eAAb,CAAV,CACGG,IADH,CACQ,UAAAC,IAAI,EAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAMG,OAAO,GAAC,IAAIC,GAAJ,EAAd;AACAJ,IAAAA,IAAI,CAACK,YAAL,CAAkBC,UAAlB,CAA6BC,KAA7B,CAAmCC,GAAnC,CAAuC,gBACvC;AAAA,UADyCC,IACzC,QADyCA,IACzC;AACEN,MAAAA,OAAO,CAACO,GAAR,CAAYD,IAAI,CAACE,EAAjB,EAAoBF,IAApB;AACD,KAHD;AAIAd,IAAAA,cAAc,CAACQ,OAAD,CAAd;AACD,GATH;AAWD,CAtCM","sourcesContent":["export const ADD_BOOK = 'ADD_BOOK';\nexport const ADD_COMMENT='ADD_COMMENT';\nexport const ADD_AUTHOR = 'ADD_AUTHOR';\nexport const SIGNUP_USER = 'SIGNUP_USER';\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const UPDATE_BOOK='UPDATE_BOOK';\nexport const DELETE_BOOK='DELETE_BOOK';\nexport const DELETE_AUTHOR='DELETE_AUTHOR';\nexport const FETCH_BOOKS = 'FETCH_BOOKS';\nexport const FETCH_AUTHORS = 'FETCH_AUTHORS';\n\n\nexport const fetchAuthors= (onFetchAuthors)=>{\n\n  const allAuthorsQuery = graphql`\n  query AuthorContainerQuery\n  {\n  authorviewer{\n    allAuthors(last:100) @connection(key:\"AuthorList_allAuthors\",filters:[])\n    {\n      edges\n      {\n        node\n        {\n          id\n          name\n          age\n          birthPlace\n          books\n          {\n            title\n          }\n        }\n      }\n    }\n  }\n  }\n  `;\n\n  fetchQuery(environment,allAuthorsQuery)\n    .then(data => {\n      console.log(data);\n      const authors=new Map();\n      data.authorviewer.allAuthors.edges.map(({node})=>\n      {\n        authors.set(node.id,node);\n      })\n      onFetchAuthors(authors);\n    });\n\n}\n"]},"metadata":{},"sourceType":"module"}