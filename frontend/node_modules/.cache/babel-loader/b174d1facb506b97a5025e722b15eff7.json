{"ast":null,"code":"import _objectSpread from \"/Users/abinetd/Desktop/Redux/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from './actions';\nvar initialState = {\n  books: Map(),\n  authors: Map()\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.ADD_BOOK:\n      {\n        var books = state.books.add(action.book.id, action.book);\n        return {\n          books: _objectSpread({}, books),\n          authors: _objectSpread({}, state.authors)\n        };\n      }\n\n    case actionTypes.FETCH_BOOKS:\n      {\n        return {\n          books: action.books,\n          authors: _objectSpread({}, state.authors)\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/abinetd/Desktop/Redux/GraphQL/frontend/src/store/reducer.js"],"names":["actionTypes","initialState","books","Map","authors","reducer","state","action","type","ADD_BOOK","add","book","id","FETCH_BOOKS"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,WAA7B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAACC,GAAG,EADQ;AAEjBC,EAAAA,OAAO,EAACD,GAAG;AAFM,CAArB;;AAKA,IAAME,OAAO,GAAG,SAAVA,OAAU,GAChB;AAAA,MADiBC,KACjB,uEADuBL,YACvB;AAAA,MADoCM,MACpC;;AACI,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKR,WAAW,CAACS,QAAjB;AAA0B;AACxB,YAAMP,KAAK,GAACI,KAAK,CAACJ,KAAN,CAAYQ,GAAZ,CAAgBH,MAAM,CAACI,IAAP,CAAYC,EAA5B,EAA+BL,MAAM,CAACI,IAAtC,CAAZ;AACA,eAAO;AACLT,UAAAA,KAAK,oBAAKA,KAAL,CADA;AAELE,UAAAA,OAAO,oBAAKE,KAAK,CAACF,OAAX;AAFF,SAAP;AAID;;AACD,SAAKJ,WAAW,CAACa,WAAjB;AAA6B;AAC3B,eAAO;AACLX,UAAAA,KAAK,EAACK,MAAM,CAACL,KADR;AAELE,UAAAA,OAAO,oBAAKE,KAAK,CAACF,OAAX;AAFF,SAAP;AAID;;AACD;AAAU,aAAOE,KAAP;AAdZ;AAgBH,CAlBD;;AAoBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from './actions';\n\nconst initialState = {\n    books:Map(),\n    authors:Map()\n};\n\nconst reducer = (state=initialState,action)=>\n{\n    switch(action.type){\n      case actionTypes.ADD_BOOK:{\n        const books=state.books.add(action.book.id,action.book)\n        return {\n          books:{...books},\n          authors:{...state.authors}\n        }\n      }\n      case actionTypes.FETCH_BOOKS:{\n        return {\n          books:action.books,\n          authors:{...state.authors}\n        }\n      }\n      default : return state;\n    }\n}\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}