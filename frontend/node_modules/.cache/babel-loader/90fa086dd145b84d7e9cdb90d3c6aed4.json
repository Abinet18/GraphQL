{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict-local\n * @format\n */\n'use strict';\n/**\n * A helper function to fetch the results of a query. Note that results for\n * fragment spreads are masked: fields must be explicitly listed in the query in\n * order to be accessible in the result object.\n */\n\nfunction fetchRelayModernQuery(environment, taggedNode, variables, cacheConfig) {\n  !environment.unstable_internal ? process.env.NODE_ENV !== 'production' ? require('fbjs/lib/invariant')(false, 'fetchRelayModernQuery: Expected a valid Relay environment, got `%s`.', environment) : require('fbjs/lib/invariant')(false) : void 0;\n  var _environment$unstable = environment.unstable_internal,\n      createOperationSelector = _environment$unstable.createOperationSelector,\n      getRequest = _environment$unstable.getRequest;\n  var query = getRequest(taggedNode);\n\n  if (query.kind === require('./RelayConcreteNode').BATCH_REQUEST) {\n    throw new Error('fetchRelayModernQuery: Batch request not supported in this API.');\n  }\n\n  if (query.operationKind !== 'query') {\n    throw new Error('fetchRelayModernQuery: Expected query operation');\n  }\n\n  var operation = createOperationSelector(query, variables);\n  return environment.execute({\n    operation: operation,\n    cacheConfig: cacheConfig\n  }).map(function () {\n    return environment.lookup(operation.fragment).data;\n  }).toPromise();\n}\n\nmodule.exports = fetchRelayModernQuery;","map":null,"metadata":{},"sourceType":"script"}