{"ast":null,"code":"import { commitMutation, graphql } from 'react-relay';\nimport environment from '../Environment';\n\nvar mutation = function mutation() {\n  var node = require(\"./__generated__/LoginMutation.graphql\");\n\n  if (node.hash && node.hash !== \"51f3914618bb0f85d18f4894329ee480\") {\n    console.error(\"The definition of 'LoginMutation' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n  }\n\n  return require(\"./__generated__/LoginMutation.graphql\");\n};\n\nexport default (function (username, password, history, callback) {\n  var variables = {\n    input: {\n      username: username,\n      password: password\n    },\n    clientMutationId: \"\"\n  };\n  commitMutation(environment, {\n    mutation: mutation,\n    variables: variables,\n    onCompleted: function onCompleted(response, errors) {\n      if (response.loginUser && response.loginUser.token) {\n        localStorage.setItem(\"authToken\", response.loginUser.token);\n        callback();\n        history.push('/books');\n      }\n    },\n    onError: function onError(err) {\n      return console.error(err);\n    }\n  });\n});","map":{"version":3,"sources":["/Users/abinetd/Desktop/Redux/GraphQL/frontend/src/mutations/LoginMutation.js"],"names":["commitMutation","graphql","environment","mutation","username","password","history","callback","variables","input","clientMutationId","onCompleted","response","errors","loginUser","token","localStorage","setItem","push","onError","err","console","error"],"mappings":"AAAA,SAAQA,cAAR,EAAwBC,OAAxB,QAAsC,aAAtC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AACA,IAAMC,QAAQ,YAARA,QAAQ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,CAAd;;AAUA,gBAAe,UAACC,QAAD,EAAUC,QAAV,EAAmBC,OAAnB,EAA2BC,QAA3B,EAAuC;AACpD,MAAMC,SAAS,GAAG;AACdC,IAAAA,KAAK,EAAC;AACJL,MAAAA,QAAQ,EAARA,QADI;AAEJC,MAAAA,QAAQ,EAARA;AAFI,KADQ;AAMhBK,IAAAA,gBAAgB,EAAC;AAND,GAAlB;AASAV,EAAAA,cAAc,CACZE,WADY,EAEZ;AACEC,IAAAA,QAAQ,EAARA,QADF;AAEEK,IAAAA,SAAS,EAATA,SAFF;AAIEG,IAAAA,WAAW,EAAE,qBAACC,QAAD,EAAWC,MAAX,EAAsB;AACjC,UAAGD,QAAQ,CAACE,SAAT,IAAsBF,QAAQ,CAACE,SAAT,CAAmBC,KAA5C,EACA;AAEAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiCL,QAAQ,CAACE,SAAT,CAAmBC,KAApD;AACAR,QAAAA,QAAQ;AACRD,QAAAA,OAAO,CAACY,IAAR,CAAa,QAAb;AACD;AACA,KAZH;AAaEC,IAAAA,OAAO,EAAE,iBAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA;AAbd,GAFY,CAAd;AAkBD,CA5BD","sourcesContent":["import {commitMutation, graphql} from 'react-relay';\nimport environment from '../Environment';\nconst mutation = graphql`\n  mutation LoginMutation(\n    $input:LoginUserInput!\n  ) {\n    loginUser(input:$input) {\n      token\n    }\n    }\n`;\n\nexport default (username,password,history,callback)=> {\n  const variables = {\n      input:{\n        username,\n        password\n      },\n\n    clientMutationId:\"\"\n  };\n\n  commitMutation(\n    environment,\n    {\n      mutation,\n      variables,\n\n      onCompleted: (response, errors) => {\n        if(response.loginUser && response.loginUser.token)\n        {\n\n        localStorage.setItem(\"authToken\",response.loginUser.token);\n        callback();\n        history.push('/books');\n      }\n      },\n      onError: err => console.error(err),\n    },\n  );\n}\n"]},"metadata":{},"sourceType":"module"}