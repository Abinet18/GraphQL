{"ast":null,"code":"import { commitMutation, graphql } from 'react-relay';\nimport { ConnectionHandler } from \"relay-runtime\";\nimport environment from '../Environment';\n\nvar mutation = function mutation() {\n  var node = require(\"./__generated__/AddCommentMutation.graphql\");\n\n  if (node.hash && node.hash !== \"edaa156a75b5938e0199c974ddd48584\") {\n    console.error(\"The definition of 'AddCommentMutation' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n  }\n\n  return require(\"./__generated__/AddCommentMutation.graphql\");\n};\n\nexport default (function (book, userid, comment, onAddComment) {\n  var variables = {\n    input: {\n      comment: {\n        bookid: book.id,\n        userid: userid,\n        comment: comment\n      }\n    },\n    clientMutationId: \"\"\n  };\n  commitMutation(environment, {\n    mutation: mutation,\n    variables: variables,\n    onCompleted: function onCompleted(response, errors) {\n      console.log(response);\n      onAddComment(response.addComment.book);\n    },\n    onError: function onError(err) {\n      return console.error(err);\n    }\n  });\n});","map":{"version":3,"sources":["/Users/abinetd/Desktop/Redux/GraphQL/frontend/src/mutations/AddCommentMutation.js"],"names":["commitMutation","graphql","ConnectionHandler","environment","mutation","book","userid","comment","onAddComment","variables","input","bookid","id","clientMutationId","onCompleted","response","errors","console","log","addComment","onError","err","error"],"mappings":"AAAA,SAAQA,cAAR,EAAwBC,OAAxB,QAAsC,aAAtC;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AACA,IAAMC,QAAQ,YAARA,QAAQ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,CAAd;;AAuBA,gBAAe,UAACC,IAAD,EAAMC,MAAN,EAAaC,OAAb,EAAqBC,YAArB,EAAqC;AAGlD,MAAMC,SAAS,GAAG;AAChBC,IAAAA,KAAK,EAAC;AAACH,MAAAA,OAAO,EAAE;AACdI,QAAAA,MAAM,EAACN,IAAI,CAACO,EADE;AAEdN,QAAAA,MAAM,EAACA,MAFO;AAGdC,QAAAA,OAAO,EAACA;AAHM;AAAV,KADU;AAMhBM,IAAAA,gBAAgB,EAAC;AAND,GAAlB;AAWAb,EAAAA,cAAc,CACZG,WADY,EAEZ;AACEC,IAAAA,QAAQ,EAARA,QADF;AAEEK,IAAAA,SAAS,EAATA,SAFF;AAGEK,IAAAA,WAAW,EAAE,qBAACC,QAAD,EAAWC,MAAX,EAAsB;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAP,MAAAA,YAAY,CAACO,QAAQ,CAACI,UAAT,CAAoBd,IAArB,CAAZ;AACD,KANH;AAOEe,IAAAA,OAAO,EAAE,iBAAAC,GAAG;AAAA,aAAIJ,OAAO,CAACK,KAAR,CAAcD,GAAd,CAAJ;AAAA;AAPd,GAFY,CAAd;AAYD,CA1BD","sourcesContent":["import {commitMutation, graphql} from 'react-relay';\nimport { ConnectionHandler } from \"relay-runtime\";\nimport environment from '../Environment';\nconst mutation = graphql`\n  mutation AddCommentMutation(\n    $input: AddCommentInput!\n  ) {\n    addComment(input:$input) {\n      book{\n        id\n        title\n        description\n        author{name}\n        comments{\n          user{\n            id\n            fullname\n          }\n          comment\n          commentdate\n        }\n    }\n  }\n  }\n  `;\n\nexport default (book,userid,comment,onAddComment)=> {\n\n\n  const variables = {\n    input:{comment: {\n      bookid:book.id,\n      userid:userid,\n      comment:comment,\n    }},\n    clientMutationId:\"\"\n  };\n\n\n\n  commitMutation(\n    environment,\n    {\n      mutation,\n      variables,\n      onCompleted: (response, errors) => {\n        console.log(response);\n        onAddComment(response.addComment.book);\n      },\n      onError: err => console.error(err),\n    },\n  );\n}\n"]},"metadata":{},"sourceType":"module"}