{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nfunction createFragmentSpecResolver(context, containerName, fragments, props, callback) {\n  if (process.env.NODE_ENV !== 'production') {\n    var fragmentNames = Object.keys(fragments);\n    fragmentNames.forEach(function (fragmentName) {\n      var propValue = props[fragmentName];\n      process.env.NODE_ENV !== 'production' ? require('fbjs/lib/warning')(propValue !== undefined, 'createFragmentSpecResolver: Expected prop `%s` to be supplied to `%s`, but ' + 'got `undefined`. Pass an explicit `null` if this is intentional.', fragmentName, containerName) : void 0;\n    });\n  }\n\n  return new (require('./RelayModernFragmentSpecResolver'))(context, fragments, props, callback);\n}\n\nmodule.exports = {\n  areEqualSelectors: require('./RelayModernSelector').areEqualSelectors,\n  createFragmentSpecResolver: createFragmentSpecResolver,\n  createOperationSelector: require('./RelayModernOperationSelector').createOperationSelector,\n  getDataIDsFromObject: require('./RelayModernSelector').getDataIDsFromObject,\n  getFragment: require('./RelayModernGraphQLTag').getFragment,\n  getRequest: require('./RelayModernGraphQLTag').getRequest,\n  getSelector: require('./RelayModernSelector').getSelector,\n  getSelectorList: require('./RelayModernSelector').getSelectorList,\n  getSelectorsFromObject: require('./RelayModernSelector').getSelectorsFromObject,\n  getVariablesFromObject: require('./RelayModernSelector').getVariablesFromObject\n};","map":null,"metadata":{},"sourceType":"script"}