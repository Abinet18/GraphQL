{"ast":null,"code":"import { commitMutation, graphql, toGlobalId } from 'react-relay';\nimport { ConnectionHandler } from \"relay-runtime\";\nimport environment from '../Environment';\n\nvar mutation = function mutation() {\n  var node = require(\"./__generated__/UpdateBookMutation.graphql\");\n\n  if (node.hash && node.hash !== \"cda24ec49dec2f7c8c4d9e13a12410e9\") {\n    console.error(\"The definition of 'UpdateBookMutation' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n  }\n\n  return require(\"./__generated__/UpdateBookMutation.graphql\");\n};\n\nexport default (function (book, onUpdateBook) {\n  var variables = {\n    input: {\n      book: {\n        id: book.id,\n        title: book.title,\n        description: book.description,\n        authorid: book.authorid\n      }\n    },\n    clientMutationId: \"\"\n  };\n  commitMutation(environment, {\n    mutation: mutation,\n    variables: variables,\n    onCompleted: function onCompleted(response, errors) {\n      console.log(response);\n      onUpdateBook(response.updateBook.book);\n    },\n    onError: function onError(err) {\n      return console.error(err);\n    }\n  });\n});","map":{"version":3,"sources":["/Users/abinetd/Desktop/Redux/GraphQL/frontend/src/mutations/UpdateBookMutation.js"],"names":["commitMutation","graphql","toGlobalId","ConnectionHandler","environment","mutation","book","onUpdateBook","variables","input","id","title","description","authorid","clientMutationId","onCompleted","response","errors","console","log","updateBook","onError","err","error"],"mappings":"AAAA,SAAQA,cAAR,EAAwBC,OAAxB,EAAgCC,UAAhC,QAAiD,aAAjD;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AACA,IAAMC,QAAQ,YAARA,QAAQ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,CAAd;;AAyBA,gBAAe,UAACC,IAAD,EAAMC,YAAN,EAAsB;AAEnC,MAAMC,SAAS,GAAG;AAChBC,IAAAA,KAAK,EAAC;AAACH,MAAAA,IAAI,EAAC;AAACI,QAAAA,EAAE,EAACJ,IAAI,CAACI,EAAT;AAAYC,QAAAA,KAAK,EAACL,IAAI,CAACK,KAAvB;AAA6BC,QAAAA,WAAW,EAACN,IAAI,CAACM,WAA9C;AAA0DC,QAAAA,QAAQ,EAACP,IAAI,CAACO;AAAxE;AAAN,KADU;AAEhBC,IAAAA,gBAAgB,EAAC;AAFD,GAAlB;AAOAd,EAAAA,cAAc,CACZI,WADY,EAEZ;AACEC,IAAAA,QAAQ,EAARA,QADF;AAEEG,IAAAA,SAAS,EAATA,SAFF;AAGEO,IAAAA,WAAW,EAAE,qBAACC,QAAD,EAAWC,MAAX,EAAsB;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAT,MAAAA,YAAY,CAACS,QAAQ,CAACI,UAAT,CAAoBd,IAArB,CAAZ;AACD,KANH;AAOEe,IAAAA,OAAO,EAAE,iBAAAC,GAAG;AAAA,aAAIJ,OAAO,CAACK,KAAR,CAAcD,GAAd,CAAJ;AAAA;AAPd,GAFY,CAAd;AAaD,CAtBD","sourcesContent":["import {commitMutation, graphql,toGlobalId} from 'react-relay';\nimport { ConnectionHandler } from \"relay-runtime\";\nimport environment from '../Environment';\nconst mutation = graphql`\n  mutation UpdateBookMutation(\n    $input: UpdateBookInput!\n  ) {\n    updateBook(input:$input)\n    {\n      book{\n        id\n        title\n        description\n        author{name}\n        comments{\n          user{\n            id\n            fullname\n          }\n          comment\n          commentdate\n        }\n    }\n    }\n  }\n\n  `;\n\nexport default (book,onUpdateBook)=> {\n\n  const variables = {\n    input:{book:{id:book.id,title:book.title,description:book.description,authorid:book.authorid}}  ,\n    clientMutationId:\"\"\n  };\n\n\n\n  commitMutation(\n    environment,\n    {\n      mutation,\n      variables,\n      onCompleted: (response, errors) => {\n        console.log(response);\n        onUpdateBook(response.updateBook.book);\n      },\n      onError: err => console.error(err),\n\n    },\n  );\n}\n"]},"metadata":{},"sourceType":"module"}