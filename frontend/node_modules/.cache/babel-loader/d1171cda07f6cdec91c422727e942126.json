{"ast":null,"code":"import { commitMutation, graphql, toGlobalId } from 'react-relay';\nimport { ConnectionHandler } from \"relay-runtime\";\nimport environment from '../Environment';\n\nvar mutation = function mutation() {\n  var node = require(\"./__generated__/DeleteBookMutation.graphql\");\n\n  if (node.hash && node.hash !== \"6fd33f9d17b2d985311a5b9695791447\") {\n    console.error(\"The definition of 'DeleteBookMutation' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n  }\n\n  return require(\"./__generated__/DeleteBookMutation.graphql\");\n};\n\nexport default (function (book) {\n  var variables = {\n    input: {\n      id: book.id\n    },\n    clientMutationId: \"\"\n  };\n  var optimisticResponse = {\n    deleteBook: {\n      id: book.id\n    }\n  };\n\n  var updater = function updater(proxyStore) {\n    var deleteBookField = proxyStore.getRootField('deleteBook');\n    var id = deleteBookField.getValue('id');\n    console.log(id);\n    if (!id) return;\n    var viewerId = 'viewer-fixed';\n    var viewerProxy = proxyStore.get(viewerId);\n    var connection = ConnectionHandler.getConnection(viewerProxy, \"BookList_allBooks\");\n\n    if (connection) {\n      console.log(\"deleting\");\n      ConnectionHandler.deleteNode(connection, id);\n    }\n  };\n\n  commitMutation(environment, {\n    mutation: mutation,\n    variables: variables,\n    onCompleted: function onCompleted(response, errors) {\n      console.log(response);\n    },\n    onError: function onError(err) {\n      return console.error(err);\n    },\n    updater: updater,\n    optimisticUpdater: updater,\n    optimisticResponse: optimisticResponse\n  });\n});","map":{"version":3,"sources":["/Users/abinetd/Desktop/Redux/GraphQL/frontend/src/mutations/DeleteBookMutation.js"],"names":["commitMutation","graphql","toGlobalId","ConnectionHandler","environment","mutation","book","variables","input","id","clientMutationId","optimisticResponse","deleteBook","updater","proxyStore","deleteBookField","getRootField","getValue","console","log","viewerId","viewerProxy","get","connection","getConnection","deleteNode","onCompleted","response","errors","onError","err","error","optimisticUpdater"],"mappings":"AAAA,SAAQA,cAAR,EAAwBC,OAAxB,EAAgCC,UAAhC,QAAiD,aAAjD;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AACA,IAAMC,QAAQ,YAARA,QAAQ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,CAAd;;AAYA,gBAAe,UAACC,IAAD,EAAS;AAEtB,MAAMC,SAAS,GAAG;AAChBC,IAAAA,KAAK,EAAC;AAACC,MAAAA,EAAE,EAAEH,IAAI,CAACG;AAAV,KADU;AAEhBC,IAAAA,gBAAgB,EAAC;AAFD,GAAlB;AAKA,MAAMC,kBAAkB,GAAG;AACvBC,IAAAA,UAAU,EAAE;AACVH,MAAAA,EAAE,EAAEH,IAAI,CAACG;AADC;AADW,GAA3B;;AAMA,MAAMI,OAAO,GAAI,SAAXA,OAAW,CAACC,UAAD,EAAgB;AAE/B,QAAMC,eAAe,GAAED,UAAU,CAACE,YAAX,CAAwB,YAAxB,CAAvB;AACA,QAAMP,EAAE,GAAEM,eAAe,CAACE,QAAhB,CAAyB,IAAzB,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,EAAZ;AACA,QAAG,CAACA,EAAJ,EAAQ;AACR,QAAMW,QAAQ,GAAC,cAAf;AACA,QAAMC,WAAW,GAACP,UAAU,CAACQ,GAAX,CAAeF,QAAf,CAAlB;AAEA,QAAMG,UAAU,GAACpB,iBAAiB,CAACqB,aAAlB,CAAgCH,WAAhC,EAA4C,mBAA5C,CAAjB;;AACA,QAAGE,UAAH,EAAc;AACXL,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAhB,MAAAA,iBAAiB,CAACsB,UAAlB,CAA6BF,UAA7B,EAAwCd,EAAxC;AACC;AACL,GAdD;;AAiBAT,EAAAA,cAAc,CACZI,WADY,EAEZ;AACEC,IAAAA,QAAQ,EAARA,QADF;AAEEE,IAAAA,SAAS,EAATA,SAFF;AAGEmB,IAAAA,WAAW,EAAE,qBAACC,QAAD,EAAWC,MAAX,EAAsB;AACjCV,MAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ;AACD,KALH;AAMEE,IAAAA,OAAO,EAAE,iBAAAC,GAAG;AAAA,aAAIZ,OAAO,CAACa,KAAR,CAAcD,GAAd,CAAJ;AAAA,KANd;AAOEjB,IAAAA,OAAO,EAACA,OAPV;AAQEmB,IAAAA,iBAAiB,EAACnB,OARpB;AASEF,IAAAA,kBAAkB,EAAlBA;AATF,GAFY,CAAd;AAcD,CA5CD","sourcesContent":["import {commitMutation, graphql,toGlobalId} from 'react-relay';\nimport { ConnectionHandler } from \"relay-runtime\";\nimport environment from '../Environment';\nconst mutation = graphql`\n  mutation DeleteBookMutation(\n    $input: DeleteBookInput!\n  ) {\n    deleteBook(input:$input)\n    {\n      id\n    }\n  }\n\n  `;\n\nexport default (book)=> {\n\n  const variables = {\n    input:{id: book.id}  ,\n    clientMutationId:\"\"\n  };\n\n  const optimisticResponse = {\n      deleteBook: {\n        id: book.id\n    }\n  };\n\n  const updater =  (proxyStore) => {\n\n    const deleteBookField= proxyStore.getRootField('deleteBook');\n    const id= deleteBookField.getValue('id');\n    console.log(id);\n    if(!id) return;\n    const viewerId='viewer-fixed'\n    const viewerProxy=proxyStore.get(viewerId);\n\n    const connection=ConnectionHandler.getConnection(viewerProxy,\"BookList_allBooks\");\n    if(connection){\n       console.log(\"deleting\");\n       ConnectionHandler.deleteNode(connection,id);\n       }\n  };\n\n\n  commitMutation(\n    environment,\n    {\n      mutation,\n      variables,\n      onCompleted: (response, errors) => {\n        console.log(response);\n      },\n      onError: err => console.error(err),\n      updater:updater,\n      optimisticUpdater:updater,\n      optimisticResponse\n    },\n  );\n}\n"]},"metadata":{},"sourceType":"module"}