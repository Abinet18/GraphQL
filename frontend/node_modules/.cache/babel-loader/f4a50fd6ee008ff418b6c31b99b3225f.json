{"ast":null,"code":"import _objectSpread from \"/Users/abinetd/Desktop/Redux/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/abinetd/Desktop/Redux/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/abinetd/Desktop/Redux/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/abinetd/Desktop/Redux/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/abinetd/Desktop/Redux/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/abinetd/Desktop/Redux/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/abinetd/Desktop/Redux/GraphQL/frontend/src/components/BookList.js\";\nimport React from 'react';\nimport { createPaginationContainer, graphql } from 'react-relay';\nimport AddBook from './addbook';\nimport Book from './Book';\n\nvar BookList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BookList, _React$Component);\n\n  function BookList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BookList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BookList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this._loadMore = function () {\n      if (!_this.props.relay.hasMore()) {\n        console.log(\"Nothing more to load\");\n        return;\n      } else if (_this.props.relay.isLoading()) {\n        console.log(\"Request is already pending\");\n        return;\n      }\n\n      _this.props.relay.loadMore(3);\n    };\n\n    return _this;\n  }\n\n  _createClass(BookList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, this.props.viewer.allBooks.edges.map(function (_ref) {\n        var node = _ref.node;\n        return React.createElement(Book, {\n          book: node,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        });\n      }), React.createElement(\"button\", {\n        className: \"primary\",\n        onClick: this._loadMore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"Load More\"), React.createElement(AddBook, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BookList;\n}(React.Component);\n\nexport default createPaginationContainer(BookList, {\n  viewer: function viewer() {\n    var node = require(\"./__generated__/BookList_viewer.graphql\");\n\n    if (node.hash && node.hash !== \"f0c9a381317abef42e3d53d02ffe4ab0\") {\n      console.error(\"The definition of 'BookList_viewer' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"./__generated__/BookList_viewer.graphql\");\n  }\n}, {\n  direction: \"forward\",\n  query: function query() {\n    var node = require(\"./__generated__/BookListForwardQuery.graphql\");\n\n    if (node.hash && node.hash !== \"f469591e4623396702c43e9984e0d608\") {\n      console.error(\"The definition of 'BookListForwardQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\");\n    }\n\n    return require(\"./__generated__/BookListForwardQuery.graphql\");\n  },\n  getConnectionFromProps: function getConnectionFromProps(props) {\n    return props.viewer && props.viewer.allBooks;\n  },\n  getFragmentVariables: function getFragmentVariables(previousVariables, totalCount) {\n    return _objectSpread({}, previousVariables, {\n      count: totalCount\n    });\n  },\n  getVariables: function getVariables(props, paginationInfo, fragmentVariables) {\n    return {\n      count: paginationInfo.count,\n      after: paginationInfo.cursor\n    };\n  }\n});","map":{"version":3,"sources":["/Users/abinetd/Desktop/Redux/GraphQL/frontend/src/components/BookList.js"],"names":["React","createPaginationContainer","graphql","AddBook","Book","BookList","_loadMore","props","relay","hasMore","console","log","isLoading","loadMore","viewer","allBooks","edges","map","node","Component","direction","query","getConnectionFromProps","getFragmentVariables","previousVariables","totalCount","count","getVariables","paginationInfo","fragmentVariables","after","cursor"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,yBAAT,EAAmCC,OAAnC,QAAkD,aAAlD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IACMC,Q;;;;;;;;;;;;;;;;;;UAYNC,S,GAAU,YAAI;AACZ,UAAG,CAAC,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,OAAjB,EAAJ,EAA+B;AAC7BC,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA;AACD,OAHD,MAGM,IAAG,MAAKJ,KAAL,CAAWC,KAAX,CAAiBI,SAAjB,EAAH,EAAgC;AACpCF,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA;AACD;;AACD,YAAKJ,KAAL,CAAWC,KAAX,CAAiBK,QAAjB,CAA0B,CAA1B;AACD,K;;;;;;;6BAlBC;AACE,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKN,KAAL,CAAWO,MAAX,CAAkBC,QAAlB,CAA2BC,KAA3B,CAAiCC,GAAjC,CAAqC;AAAA,YAAEC,IAAF,QAAEA,IAAF;AAAA,eAAW,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAX;AAAA,OAArC,CADD,EAEA;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAA4B,QAAA,OAAO,EAAE,KAAKZ,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFA,EAGA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHA,CADA;AAOH;;;;EAXsBN,KAAK,CAACmB,S;;AAwB7B,eAAelB,yBAAyB,CAACI,QAAD;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAmBxC;AACEe,EAAAA,SAAS,EAAC,SADZ;AAEEC,EAAAA,KAAK;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,GAFP;AASEC,EAAAA,sBATF,kCASyBf,KATzB,EAS+B;AAC3B,WAAOA,KAAK,CAACO,MAAN,IAAgBP,KAAK,CAACO,MAAN,CAAaC,QAApC;AACD,GAXH;AAYEQ,EAAAA,oBAZF,gCAYuBC,iBAZvB,EAYyCC,UAZzC,EAaE;AACE,6BACKD,iBADL;AAEEE,MAAAA,KAAK,EAACD;AAFR;AAID,GAlBH;AAmBEE,EAAAA,YAnBF,wBAmBepB,KAnBf,EAmBqBqB,cAnBrB,EAmBoCC,iBAnBpC,EAmBsD;AAClD,WAAO;AACLH,MAAAA,KAAK,EAACE,cAAc,CAACF,KADhB;AAELI,MAAAA,KAAK,EAACF,cAAc,CAACG;AAFhB,KAAP;AAID;AAxBH,CAnBwC,CAAxC","sourcesContent":["import React from 'react';\nimport { createPaginationContainer,graphql } from 'react-relay';\nimport AddBook from './addbook';\nimport Book from './Book';\nclass BookList extends React.Component\n{\n  render()\n  {\n    return(\n    <div>\n    {this.props.viewer.allBooks.edges.map(({node})=>(<Book book={node}/>))}\n    <button className=\"primary\" onClick={this._loadMore}>Load More</button>\n    <AddBook />\n    </div>\n  );\n}\n_loadMore=()=>{\n  if(!this.props.relay.hasMore()){\n    console.log(\"Nothing more to load\");\n    return;\n  }else if(this.props.relay.isLoading()){\n    console.log(\"Request is already pending\");\n    return;\n  }\n  this.props.relay.loadMore(3);\n}\n}\n\nexport default createPaginationContainer(BookList,graphql`\n  fragment BookList_viewer on Viewer\n  {\n    allBooks(first:$count,after:$after,order:\"DESC\") @connection(key:\"BookList_allBooks\",filters:[])\n    {\n      edges\n      {\n        node\n        {\n          ...Book_book\n        }\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n    }\n  }\n`,\n{\n  direction:\"forward\",\n  query: graphql`\n    query BookListForwardQuery ($count:Int!,$after:String){\n      viewer{\n        ...BookList_viewer\n      }\n    }\n  `,\n  getConnectionFromProps(props){\n    return props.viewer && props.viewer.allBooks;\n  },\n  getFragmentVariables(previousVariables,totalCount)\n  {\n    return {\n      ...previousVariables,\n      count:totalCount\n    };\n  },\n  getVariables(props,paginationInfo,fragmentVariables){\n    return {\n      count:paginationInfo.count,\n      after:paginationInfo.cursor\n    }\n  }\n}\n  )\n"]},"metadata":{},"sourceType":"module"}